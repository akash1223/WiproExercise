apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'koin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.appcretor.wiproexercise"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            buildConfigField "String", "BASE_URL", '"https://dl.dropboxusercontent.com/s/2iodh4vg0eortkl/"'
        }
        staging {
            buildConfigField "String", "BASE_URL", '"https://dl.dropboxusercontent.com/s/2iodh4vg0eortkl/"'
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests {
            includeAndroidResources = true
        }
        testOptions {
            unitTests.includeAndroidResources = true
        }
    }

    buildFeatures {
        dataBinding true
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta8'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.lifecycle:lifecycle-common:$vLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$vLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$vLifecycleVersion"

    //Fragment Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // UI
    implementation "androidx.appcompat:appcompat:$appcompact_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "androidx.cardview:cardview:$card_view_version"

    // Glide dependency
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // LOGGER
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttP_mock_server_version"


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version" // ViewModel
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version" // LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Koin dependency injection

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"

    // Unit Testing
    //noinspection GradleDependency
    testImplementation "org.koin:koin-core:$koin_version"
    implementation "org.projectlombok:lombok:1.16.18"

    //noinspection GradleDependency
    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$nhaarman_mockito_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"
    testImplementation "androidx.test:core-ktx:$test_core_ktx_version"
    testImplementation "com.google.truth:truth:1.0.1"
     testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'


}

jacoco {
    toolVersion = '0.8.5'
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }
    def androidExclusion = [
            '**/databinding/**/*.*',
            '**/android/databinding/*Binding.*',
            '**/BR.*',
            '**/R.*',
            '**/R$*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*_MembersInjector.*',
            '**/Dagger*Component.*',
            '**/Dagger*Component$Builder.*',
            '**/*Module_*Factory.*',
            '**/*Fragment*.*',
            '**/*Activity*.*',
            '**/*Adapter*.*',
            '**/*ViewPager*.*',
            '**/*ViewHolder*.*',
            '**/*Module*.*',
            '**/*Base*.*',
            '**/*Item*.*',
            'com/lysn/clinician/utility/extensions/**',
            'com/lysn/clinician/utility/**',
            'com/lysn/clinician/ui/base/**'

    ]
    /*  def mainSrc = "$project.projectDir/src/main/java"

      sourceDirectories.setFrom files([mainSrc])
      classDirectories.setFrom files([debugTree])
      executionData.setFrom fileTree(dir: project.buildDir, includes: [
              'jacoco/testDebugUnitTest.exec'
      ])*/
    classDirectories.from = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: androidExclusion
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: androidExclusion
    )

    // sources
    sourceDirectories.from = files([
            android.sourceSets.main.java.srcDirs,
            "$project.projectDir/src/main/java"
    ])
    executionData.from = fileTree(dir: project.buildDir, includes: ['jacoco/testDebugUnitTest.exec'])

}
